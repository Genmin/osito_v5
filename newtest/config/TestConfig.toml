# Comprehensive Testing Configuration for Osito Protocol

[testing]
# Test suite configuration
unit_tests = true
fuzz_tests = true
fork_tests = true
invariant_tests = true
formal_verification = true
static_analysis = true
mutation_testing = true

[unit_tests]
# Comprehensive unit test settings
coverage_threshold = 100
branch_coverage_threshold = 100
function_coverage_threshold = 100
line_coverage_threshold = 100

[fuzz_tests]
# Fuzz testing configuration
runs = 10000
max_test_rejects = 50000
dictionary_weight = 40
include_storage = true
include_push_bytes = true

# Property-based fuzzing
property_runs = 5000
symbolic_execution = true
assume_pre_conditions = true

[fork_tests]
# Mainnet fork testing
rpc_url = "${ETH_RPC_URL}"
block_number = "latest"
gas_limit = 30000000
gas_price = "auto"

# Fork test scenarios
test_high_gas = true
test_mev_protection = true
test_network_congestion = true
test_realistic_patterns = true

[invariant_tests]
# Stateful invariant testing
runs = 1000
depth = 500
fail_on_revert = false
call_override = false
preserve_state = true

# Actor-based testing
max_actors = 20
actor_balance = 1000000000000000000000 # 1000 ETH in wei

[formal_verification]
# Symbolic execution settings
solver = "z3"
timeout = 300
max_depth = 100
assume_assertions = true

# SMT solver configuration
bit_width = 256
arithmetic = "bv" # bitvector arithmetic
logic = "QF_ABV" # Quantifier-free arrays and bitvectors

[static_analysis]
# Static analysis rules
check_reentrancy = true
check_overflow = true
check_access_control = true
check_timestamp_dependence = true
check_external_calls = true
check_gas_limits = true
check_visibility = true
check_unused_code = true
check_error_handling = true
check_complexity = true
check_documentation = true
check_hardcoded_values = true
check_security_patterns = true

# Complexity thresholds
max_function_lines = 60
max_function_branches = 10
max_nesting_depth = 4
max_cyclomatic_complexity = 10

[mutation_testing]
# Mutation testing configuration
mutation_score_threshold = 95
operators = [
    "arithmetic",
    "relational", 
    "logical",
    "constant",
    "statement",
    "condition",
    "solidity_specific"
]

# Critical mutation targets
priority_functions = [
    "PMinLib.calculate",
    "CollateralVault.recover",
    "LenderVault.borrowRate",
    "OsitoPair.swap",
    "CollateralVault.borrow",
    "CollateralVault.isPositionHealthy"
]

[coverage]
# Code coverage requirements
minimum_coverage = 98
exclude_patterns = [
    "test/**",
    "script/**",
    "Mock*.sol"
]

# Coverage reporting
output_format = ["html", "lcov", "cobertura"]
show_missing_lines = true
precision = 2

[performance]
# Performance benchmarks
max_gas_per_function = 1000000
max_deployment_gas = 5000000
max_transaction_gas = 500000

# Optimization checks
check_storage_packing = true
check_function_ordering = true
check_constant_expressions = true

[security]
# Security testing requirements
require_reentrancy_guards = true
require_access_controls = true
require_input_validation = true
require_overflow_protection = true

# Vulnerability scanning
scan_for_common_vulnerabilities = true
check_external_dependencies = true
validate_upgrade_safety = true

[documentation]
# Documentation requirements
require_natspec = true
require_function_docs = true
require_parameter_docs = true
require_return_docs = true
require_security_notes = true

[integration]
# CI/CD integration
fail_fast = false
parallel_execution = true
max_parallel_jobs = 4
timeout_per_test = 300

# Reporting
generate_junit_xml = true
generate_html_reports = true
upload_coverage = true
notify_on_failure = true